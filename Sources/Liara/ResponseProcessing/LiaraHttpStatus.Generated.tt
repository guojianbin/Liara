<#@ template hostSpecific="true" language="C#" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Text.RegularExpressions" #>
<# var className = "LiaraHttpStatus"; #>
// <autogenerated>
// This is Launchark auto-generated code. Any changes made manually will be lost
// the next time this code is regenerated.
// </autogenerated>

using System;
using Liara.ResponseProcessing;

namespace Liara
{
    public sealed partial class <#= className #>
    {
        <#
        var lines = File.ReadAllLines(this.Host.ResolvePath("HttpStatusCodes.txt"));
            foreach (var line in lines)
            {
                var regex = new Regex(@"^(\d+) ([\w]*)(\s)?(-)?([\w]*)(\s)?(-)?([\w]*)(\s)?(-)?([\w]*)(\s)?(-)?([\w]*)(\s)?(-)?([\w]*)(\s)?(-)?$");
                var match = regex.Match(line);
                if (match.Success)
                {
                    var code = match.Groups[1].Value;
                    var desc = (new Func<string>(() =>
                            {
                                string str = String.Empty;
                                for (int i = 2; i < match.Groups.Count; i++)
                                {
                                    str += match.Groups[i].Value;
                                }
                                return str;
                            }))();
                    var strName = (new Func<string>(() =>
                            {
                                string str = String.Empty;
                                for (int i = 2; i < match.Groups.Count; i = i+3)
                                {
                                    str += match.Groups[i].Value;
                                }
                                return str;
                            }))();
                    var cat = (new Func<string>(() =>
                            {
                                return typeof(HttpStatusCategory).Name + "." + Enum.GetName(typeof(HttpStatusCategory), Int32.Parse(match.Groups[1].Value) / 100);
                            }))();
                #>

        /// <summary>
        /// Status Code: <#= code #>
        /// Status Description: <#= desc #>
        /// </summary>
        public static readonly <#= className #> <#= strName #> = new <#= className #>(<#= match.Groups[1].Value #>, "<#= desc #>", <#= cat #>);
                
        <#      
                }
            }
        #>
    
    }
}

<#+ 
    public enum HttpStatusCategory
    {
        Informational = 1,
        Success = 2,
        Redirection = 3,
        ClientError = 4,
        ServerError = 5,
        Uncategorized = 6
    };

 #>

